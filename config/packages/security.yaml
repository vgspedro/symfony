security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        #Symfony\Component\Security\Core\User\User:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12

    providers:
        chain_provider:
            chain:
                providers: [user] 
        user:
            entity:
                class: App\Entity\User
                property: username
        #in_memory: { memory: ~ }
    
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        user_area:
            logout:
                path: /logout
                target: /login
            pattern:    ^/
            http_basic: ~
            provider: chain_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                username_parameter: username
                csrf_token_generator: security.csrf.token_manager
            user_checker: App\Security\UserChecker
            
            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #access_control:
        #- { path: ^/admin, roles: ROLE_ADMIN }
    #    - { path: ^/admin, roles: ROLE_USER }

    access_control:
       - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       - { path: ^/admin, roles: ROLE_USER }